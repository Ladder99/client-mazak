# client setup
# read by the ladder99 adapter, relay, and meter services.
# see ladder99/setups/example/setup.yaml for more details.

client:
  name: Demo # not used yet
  timezone: America/Chicago # used by relay autoprune, jobboss driver, and availability meter

# adapter reads this section to setup devices with their drivers,
# which publish data to the agent via SHDR over TCP.
# the agent is a service that communicates over the tcp channel specified in agent.cfg.
adapter:
  devices:
    - id: m # must match id in agent.xml
      name: Micro # must match name in agent.cfg and agent.xml
      sources:
        - module: micro # defines inputs and outputs with yaml files
          driver: micro # adapter plugin - manages protocol and payload
      outputs:
        agent:
          host: adapter # must match agent.cfg value
          port: 7890 # must match agent.cfg value

# relay service reads this section to know what agents and devices to read data from.
# can specify retention periods for data for agent, device, or dataitems - 1w minimum.
# would clear all unneeded data weekly - then vacuum analyze db.
# warning: don't change the agent aliases (eg main) as they are used to synch data with db.
relay:
  # retention: 1w # could specify a top-level retention for all agents here
  agents:
    - alias: Main # this is an arbitrary alias we assign to each agent, used by the db - don't change!
      url: http://agent:5000 # url to the agent
      # retention: 2d
      # ignore: true # can specify this to turn agent recording on/off
      # without a list of devices here, relay would read all available in agent
      devices:
        - id: m
          alias: Micro
          # ignore: true # can specify this to turn device recording on/off
          # dataitems:
          #   - id: m-os
          #     retention: 1d

    - alias: Mazak5701 # assign an agent alias - don't change
      url: http://mtconnect.mazakcorp.com:5701
      devices:
        - id: d1
          alias: Mill-12345
          # alias: Mill w/SMooth-G

    - alias: Mazak5717 # assign an agent alias - don't change
      url: http://mtconnect.mazakcorp.com:5717
      ignore: true # down as of 2022-09-30
      devices:
        - id: d1
          alias: Mill-12346 # for display in grafana etc

    - alias: Mazak5719 # assign an agent alias - don't change
      url: http://mtconnect.mazakcorp.com:5719
      devices:
        - id: d1
          alias: Mill-HCN001

    - alias: NIST # assign an agent alias - don't change
      url: https://smstestbed.nist.gov/vds # agie, mazak, hurco machines
      devices:
        - id: GFAgie01
          alias: Agie-Micron

        - id: Mazak01
          alias: Mazak-Integrix

        - id: Mazak03
          alias: Mazak-QuickTurn

        - id: Hurco01
          alias: Hurco-VMX24-1
          ignore: true

        - id: Hurco02
          alias: Hurco-VMX24-2

        - id: Hurco03
          alias: Hurco-VMX24-3

        - id: Hurco04
          alias: Hurco-VMX24-4

        - id: Hurco06
          alias: Hurco-VMX64
          ignore: true

    - alias: Fanuc # assign an agent alias - don't change
      url: http://10.1.10.145:5000
      # ignore: true # don't record this agent

      devices:
        - id: m
          alias: Micro

        - id: f_sim
          alias: Sim # change once have real name

        - id: f13_50
          alias: F50
          ignore: true # don't record this device

        - id: f13_100
          alias: F100
          ignore: true # don't record this device


    # - alias: Silex # assigned agent alias - don't change!
    #   url: http://10.1.10.187:5000
    #   devices:
    #     - id: FBR-100AN
    #       alias: FBR-100AN
    #       dataitems:
    #         - id: x1
    #           pathstep: X
    #         - id: y1
    #           pathstep: Y
    #         - id: z1
    #           pathstep: Z
    #         - id: C1
    #           pathstep: C
    #       # change these to { id, pathstep } -
    #       translations:
    #         load[n.load-x_p1]: load
    #         load[n.load-y_p1]: load
    #         load[n.load-z_p1]: load
    #         load[n.loadcurrentpercent-x_p1]: load[pct]
    #         load[n.loadcurrentpercent-y_p1]: load[pct]
    #         load[n.loadcurrentpercent-z_p1]: load[pct]
    #         interface_state[n.dryrun-1]: interface_state[dryrun]
    #         interface_state[n.feedrate-1]: interface_state[feedrate]
    #         interface_state[n.m00-1]: interface_state[m00]
    #         interface_state[n.m01-1]: interface_state[m01]
    #
